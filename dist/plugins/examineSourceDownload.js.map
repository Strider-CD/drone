{"version":3,"sources":["../../lib/plugins/examineSourceDownload.js"],"names":[],"mappings":";;AAAA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,SAAS,QAAQ,mBAAR,CAAb;AACA,IAAI,QAAQ,QAAQ,SAAR,CAAZ;AACA,IAAI,SAAS,QAAQ,gBAAR,EAA0B,MAA1B,CAAb;;AAEA,IAAI,6BAA6B,kDAAjC;AACA,IAAI,SAAS,SAAb;;AAEA,OAAO,OAAP,GAAiB,UAAU,OAAV,EAAmB;AAClC,sBAAoB,OAApB;AACA,6BAA2B,OAA3B;AACA,UAAQ,EAAR,CAAW,0BAAX,EAAuC,qBAAvC;AACA,UAAQ,EAAR,CAAW,6BAA6B,UAAxC,EAAoD,4BAApD;;AAEA,WAAS,qBAAT,CAAgC,GAAhC,EAAqC,EAArC,EAAyC;AACvC,QAAI,IAAI,OAAJ,KAAgB,QAApB,EAA8B;AAC5B,UAAI,gBAAgB,OAAO,EAAC,QAAQ,sBAAT,EAAP,EAAyC,IAAI,EAA7C,CAApB;AACA,YAAM,KAAN,CAAY,IAAZ,EAAkB,aAAlB;;AAEA,UAAI,WAAW,wBAAwB,IAAI,WAAJ,CAAgB,IAAhB,CAAqB,UAA5D;AACA,UAAI,WAAW,0BAA0B,QAA1B,GAAqC,IAApD,CAL4B,CAK6B;AACzD,UAAI,WAAW,uBAAuB,IAAI,WAAJ,CAAgB,IAAhB,CAAqB,KAA5C,GAAoD,GAAnE;AACA,UAAI,eAAe,6BAAnB;;AAEA,UAAI,YAAY,CAAC,QAAD,EAAW,QAAX,EAAqB,YAArB,CAAhB;AACA,UAAI,OAAO,UAAU,IAAV,CAAe,IAAf,CAAX;;AAEA,YAAM,KAAN,CAAY,aAAZ;AACA,YAAM,IAAN,CAAW,IAAX,EAAiB,UAAU,IAAV,EAAgB,MAAhB,EAAwB;AACvC,YAAI,SAAS,CAAb,EAAgB;AACd,gBAAM,IAAN;AACA,aAAG,IAAH,EAAS,GAAT;AACD,SAHD,MAGO;AACL,iBAAO,IAAP,CAAY,iBAAZ,EAA+B,MAA/B;AACA,gBAAM,IAAN;AACA,aAAG,IAAH,EAAS,GAAT;AACD;AACF,OATD;AAUD;AACD,QAAI,IAAI,OAAJ,KAAgB,MAApB,EAA4B;AAC1B;AACA,SAAG,IAAH,EAAS,GAAT;AACD;AACF;;AAED,WAAS,4BAAT,CAAuC,GAAvC,EAA4C,EAA5C,EAAgD;AAC9C,QAAI,gBAAgB,OAAO,EAAC,QAAQ,sBAAT,EAAP,EAAyC,IAAI,EAA7C,CAApB;AACA,QAAI,GAAG,UAAH,CAAc,aAAd,CAAJ,EAAkC;AAChC,YAAM,EAAN,CAAS,KAAT,EAAgB,aAAhB;AACD;AACD,OAAG,IAAH,EAAS,GAAT;AACD;AACF,CA5CD;;AA8CA,SAAS,mBAAT,CAA8B,OAA9B,EAAuC;AACrC,UAAQ,IAAR,CAAa,kCAAb,EACE,MADF,EAEE,0BAFF,EAGE,GAHF,EAIE,UAAU,GAAV,EAAe,GAAf,EAAoB;AAClB,WAAO,KAAP,CAAa,6BAAb,EAA4C,GAA5C;AACD,GANH;AAOD;;AAED,SAAS,0BAAT,CAAqC,OAArC,EAA8C;AAC5C,UAAQ,IAAR,CAAa,kCAAb,EACE,MADF,EAEE,6BAA6B,UAF/B,EAGE,GAHF,EAIE,UAAU,GAAV,EAAe,GAAf,EAAoB;AAClB,WAAO,KAAP,CAAa,oCAAb,EAAmD,GAAnD;AACD,GANH;AAOD","file":"examineSourceDownload.js","sourcesContent":["var fs = require('fs')\nvar tmpDir = require('../util/tmpDir.js')\nvar shell = require('shelljs')\nvar logger = require('../util/log.js')(module)\n\nvar examineSourceDownloadEvent = 'workspace.registeredEvent.examineSource.download'\nvar domain = 'job.new'\n\nmodule.exports = function (emitter) {\n  installIntoWorkflow(emitter)\n  installIntoWorkflowCleanup(emitter)\n  emitter.on(examineSourceDownloadEvent, examineSourceDownload)\n  emitter.on(examineSourceDownloadEvent + '.cleanup', examineSourceDownloadCleanup)\n\n  function examineSourceDownload (job, cb) {\n    if (job.trigger === 'github') {\n      var workDirectory = tmpDir({prefix: 'drone-examineSource-'}, job.id)\n      shell.mkdir('-p', workDirectory)\n\n      var cloneUrl = 'https://github.com/' + job.triggerInfo.data.branchBase\n      var cloneCmd = 'git clone --depth 50 ' + cloneUrl + ' .' // shallow clone (truncate history)\n      var fetchCmd = 'git fetch origin +' + job.triggerInfo.data.fetch + ':'\n      var fetchHeadCmd = 'git checkout -qf FETCH_HEAD'\n\n      var cloneCmds = [cloneCmd, fetchCmd, fetchHeadCmd]\n      var cmds = cloneCmds.join('; ')\n\n      shell.pushd(workDirectory)\n      shell.exec(cmds, function (code, output) {\n        if (code === 0) {\n          shell.popd()\n          cb(null, job)\n        } else {\n          logger.warn('download failed', output)\n          shell.popd()\n          cb(null, job)\n        }\n      })\n    }\n    if (job.trigger === 'rest') {\n      // nothing to do here\n      cb(null, job)\n    }\n  }\n\n  function examineSourceDownloadCleanup (job, cb) {\n    var workDirectory = tmpDir({prefix: 'drone-examineSource-'}, job.id)\n    if (fs.existsSync(workDirectory)) {\n      shell.rm('-rf', workDirectory)\n    }\n    cb(null, job)\n  }\n}\n\nfunction installIntoWorkflow (emitter) {\n  emitter.emit('workflow.registeredEvent.install',\n    domain,\n    examineSourceDownloadEvent,\n    100,\n    function (err, res) {\n      logger.debug('installIntoWorkflow failed!', err)\n    })\n}\n\nfunction installIntoWorkflowCleanup (emitter) {\n  emitter.emit('workflow.registeredEvent.install',\n    domain,\n    examineSourceDownloadEvent + '.cleanup',\n    900,\n    function (err, res) {\n      logger.debug('installIntoWorkflowCleanup failed!', err)\n    })\n}\n"]}